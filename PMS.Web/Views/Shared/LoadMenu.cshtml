@using System.Collections.Generic
@using System.Linq
@using PMS.Models.MenuModels
@model PMS.Web.ViewModels.Common.MenuViewModel
@{
    Layout = null;
}
@{
    Layout = null;
}
@*<ul class="nav navbar-nav">*@
    @{
        if (Model.MenuRights != null)
        {
            int counter = 0;
            // loop through menu headers one by one and populate childs
            foreach (MenuRight header in Model.MenuHeaders.ToList())
            {
                @*@counter==0 ? start active open : active open*@
    <li class="toActive" >

        @*<a href="@header.enu.MenuTargetController/@header.Menu.MenuFunction" class="dropdown-toggle" data-toggle="dropdown">@header.Menu.MenuTitle <span class="caret"></span></a>*@
        <a href="javascript:;">
            <i class="@header.Menu.Icon"></i>
            <span class="title">@header.Menu.MenuTitle </span>
            <span class="toSelect"></span>
            <span class="arrow open"></span>
        </a>
        <ul class="sub-menu" role="menu">

            @{
                counter++;
                // get child items with respect to menu header
                IList<MenuRight> menuRightchildList = Model.MenuRights.Where(menuright => menuright.Menu.ParentItem != null &&
                                                                                          menuright.Menu.ParentItem.MenuId == header.Menu.MenuId).ToList();
                foreach (MenuRight menuRight in menuRightchildList)
                {
                    // display childs
                    <li class="@( Request.Url.ToString().Contains(menuRight.Menu.MenuTargetController ) == true ? "active innerSelected" : "")">
                        @*<span>@Request.Url.ToString().Contains( menuRight.Menu.MenuTargetController +"/"+ menuRight.Menu.MenuFunction))</span>*@
                        <span>@*@menuRight.Menu.MenuTargetController/@menuRight.Menu.MenuFunction*@ </span>
                        @*@Html.ActionLink(@"<i class='icon-bar-chart'></i>"+menuRight.Menu.MenuTitle + '-' + menuRight.Menu.MenuFunction, menuRight.Menu.MenuFunction, menuRight.Menu.MenuTargetController)*@
                        <a href="@Url.Action(menuRight.Menu.MenuFunction, menuRight.Menu.MenuTargetController)">
                            <i class="@menuRight.Menu.Icon"></i>
                            @menuRight.Menu.MenuTitle
                        </a>
                    </li>
                }
            }
        </ul>
    </li>
            }
        }
}
@*</ul>*@
